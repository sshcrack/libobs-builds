name: Build OBS

on:
  workflow_dispatch:
    inputs:
      obs_version:
        description: "OBS Version"
        required: true

jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Install cargo-obs-build
        uses: baptiste0928/cargo-install@v3
        with:
          crate: cargo-obs-build

      - name: Build OBS
        run: cargo obs-build --out-dir out --tag ${{ github.event.inputs.obs_version }}

      - name: Run dummyDLL
        run: |
          .\dummy-dll-generator\dummyDLL.exe out\obs.dll

      - name: Rename out.dll to obs-dummy.dll
        run: |
          if (Test-Path "out.dll") {
            Move-Item -Path "out.dll" -Destination "obs-dummy.dll" -Force
          }

      - name: Install 7z
        run: choco install 7zip

      - name: Compress output directory
        run: |
          cd out
          7z a -t7z -mx=9 ../obs-build.7z .
          cd ..

      - name: Generate SHA-256 hash
        run: |
          certutil -hashfile obs-build.7z SHA256 | findstr /v "SHA256" | findstr /v "CertUtil" > obs-build.sha256

      - name: Create GitHub Release
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: obs-build-${{ github.event.inputs.obs_version }}
          name: OBS Build ${{ github.event.inputs.obs_version }}
          makeLatest: true
          draft: false
          prerelease: false
          artifacts: |
            obs-build.7z
            obs-build.sha256
            obs-dummy.dll
          artifactContentType: application/x-7z-compressed
